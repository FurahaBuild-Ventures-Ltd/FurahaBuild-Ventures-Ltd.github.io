{"version":3,"sources":["components/Button.js","components/AsyncActionButton.js","components/LoginPage.js","_constants/Constants.js","components/Register.js","components/Navbar.js","components/FarmerProfile.js","components/BuyerProfile.js","_helpers/history.js","App.js","reportWebVitals.js","index.js"],"names":["Button","ButtonContainer","onClick","this","props","label","React","Component","styled","button","AsyncActionButton","working","text_working","enabled","text_enabled","text_disabled","icon","style","message","getMessage","workingStyle","className","color","marginRight","background","boxShadow","Object","assign","Label","disabled","defaultProps","raised","fullWidth","id","LoginPage","handleChange","e","target","name","value","form_inputs","state","setState","handleSubmit","preventDefault","submitted","validator","allValid","alert","JSON","stringify","showMessages","forceUpdate","phoneNumber","password","SimpleReactValidator","LoginContainer","Card","Title","to","Form","onSubmit","Group","type","placeholder","onChange","size","marginLeft","div","COOPERATIVES","COUNTIES","ROLES","Register","fullName","idNo","role","county","confirmPassword","RegisterContainer","map","val","index","Navbar","event","NavbarContainer","right","href","showMenu","FarmerProfile","nationalIdNumber","cooperativeName","exactLocation","ProfileContainer","Control","as","BuyerProfile","history","createBrowserHistory","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wUAIqBA,E,4JACnB,WACE,OACE,cAACC,EAAD,yBAAiBC,QAASC,KAAKC,MAAMF,SAAaC,KAAKC,OAAvD,aACGD,KAAKC,MAAMC,a,GAJgBC,IAAMC,WAUpCN,EAAkBO,IAAOC,OAAV,0UCXAC,E,gKAanB,WACE,OAAIP,KAAKC,MAAMO,QAAgBR,KAAKC,MAAMQ,aACjCT,KAAKC,MAAMS,QAAgBV,KAAKC,MAAMU,aACnCX,KAAKC,MAAMW,gB,oBAGzB,WAAU,IAEJC,EAFG,EAC2Bb,KAAKC,MAAjCO,EADC,EACDA,QAASE,EADR,EACQA,QAASI,EADjB,EACiBA,MAElBC,EAAUf,KAAKgB,aACjBC,EAAe,GACfT,IACFK,EACE,mBACEK,UAAU,wBACVJ,MAAO,CAAEK,MAAO,OAAQC,YAAa,MAGzCH,EAAe,CAAEI,WAAY,UAAWC,UAAW,SAErDR,EAAQS,OAAOC,OAAO,GAAIV,GAAS,GAAIG,GACvC,IAAMQ,EAAQ,kBACZ,gCACGZ,EACAE,MAGL,OACE,cAAC,EAAD,CACEb,MAAO,cAACuB,EAAD,IACPC,SAAUlB,IAAYE,EACtBX,QAASC,KAAKC,MAAMF,QACpBe,MAAOA,Q,GA7CgCX,IAAMC,WAAhCG,EACZoB,aAAe,CACpBnB,SAAS,EACTE,SAAS,EACTX,QAAS,KACTa,cAAe,GACfH,aAAc,GACdE,aAAc,GACdiB,QAAQ,EACRC,WAAW,EACXC,GAAI,M,YCNaC,E,kDACnB,WAAY9B,GAAQ,IAAD,8BACjB,cAAMA,IAWR+B,aAAe,SAACC,GAAO,IAAD,EACIA,EAAEC,OAAlBC,EADY,EACZA,KAAMC,EADM,EACNA,MACNC,EAAgB,EAAKC,MAArBD,YACR,EAAKE,SAAS,CACZF,YAAY,2BACPA,GADM,kBAERF,EAAOC,OAlBK,EAuBnBI,aAAe,SAACP,GAAO,IACbI,EAAgB,EAAKC,MAArBD,YACRJ,EAAEQ,iBACF,EAAKF,SAAS,CACZG,WAAW,IAGT,EAAKC,UAAUC,WACjBC,MAAMC,KAAKC,UAAUV,KAErB,EAAKE,SAAS,CACZG,WAAW,IAEb,EAAKC,UAAUK,eACf,EAAKC,gBAnCP,EAAKX,MAAQ,CACXD,YAAa,CACXa,YAAa,GACbC,SAAU,IAEZT,WAAW,GAEb,EAAKC,UAAY,IAAIS,IATJ,E,0CAyCnB,WAAU,IAAD,EAC4BpD,KAAKsC,MAAhCD,EADD,EACCA,YAAaK,EADd,EACcA,UACrB,OACE,cAACW,EAAD,UACE,sBAAKnC,UAAU,uBAAf,UACE,qBAAKA,UAAU,OAAf,0BACA,oBAAIA,UAAU,YAAd,oBACA,eAACoC,EAAA,EAAD,CAAMpC,UAAU,YAAhB,UACE,cAACoC,EAAA,EAAKC,MAAN,CAAYrC,UAAU,eAAtB,4CAGA,sBAAKA,UAAU,mBAAf,mCACyB,IACvB,cAAC,IAAD,CAAMsC,GAAG,YAAYtC,UAAU,WAA/B,wBAIF,eAACuC,EAAA,EAAD,CACEtB,KAAK,OACLuB,SAAU1D,KAAKwC,aACftB,UAAU,YAHZ,UAKE,eAACuC,EAAA,EAAKE,MAAN,WACE,uBAAOzC,UAAU,aAAjB,0BACA,uBACE0C,KAAK,SACLzB,KAAK,cACL0B,YAAY,kBACZzB,MAAOC,EAAYa,YACnBY,SAAU9D,KAAKgC,aACfd,UAAU,8BAEXlB,KAAK2C,UAAU5B,QACd,cACAsB,EAAYa,YACZ,WACA,CAAEhC,UAAW,mBAIjB,eAACuC,EAAA,EAAKE,MAAN,WACE,uBAAOzC,UAAU,aAAjB,sBACA,uBACE0C,KAAK,WACLzB,KAAK,WACLC,MAAOC,EAAYc,SACnBW,SAAU9D,KAAKgC,aACf+B,KAAK,KACL7C,UAAU,6BAEXlB,KAAK2C,UAAU5B,QACd,WACAsB,EAAYc,SACZ,WACA,CAAEjC,UAAW,mBAGjB,cAACuC,EAAA,EAAKE,MAAN,UACE,qBAAKzC,UAAU,YAAf,SACE,cAAC,EAAD,CACEV,QAASkC,EACThC,SAAS,EACTD,aAAa,aACbE,aAAa,UACbG,MAAO,CAAEkD,WAAY,IACrBjE,QAASC,KAAKwC,mBAIpB,cAAC,IAAD,CAAMgB,GAAG,IAAItC,UAAU,6BAAvB,6C,GA/GyBf,IAAMC,WA0HvCiD,EAAiBhD,IAAO4D,IAAV,+2CCjIPC,EAAe,CAAC,MAAO,SAAU,OACjCC,EAAW,CAAC,UAAW,UAAW,WAClCC,EAAQ,CAAC,QAAS,SAAU,aCMpBC,E,kDACnB,WAAYpE,GAAO,IAAD,8BAChB,cAAMA,IAgBR+B,aAAa,SAACC,GAAM,IAAD,EACOA,EAAEC,OAAlBC,EADS,EACTA,KAAMC,EADG,EACHA,MACPC,EAAe,EAAKC,MAApBD,YACP,EAAKE,SAAS,CACZF,YAAY,2BACPA,GADM,kBAERF,EAAMC,OAvBK,EA4BlBI,aAAc,SAACP,GAAM,IACZI,EAAe,EAAKC,MAApBD,YACPJ,EAAEQ,iBACF,EAAKF,SAAS,CACZG,WAAU,IAGT,EAAKC,UAAUC,WAChBC,MAAMC,KAAKC,UAAUV,KAErB,EAAKE,SAAS,CACZG,WAAU,IAEZ,EAAKC,UAAUK,eACf,EAAKC,gBAxCP,EAAKX,MAAM,CACTD,YAAY,CACViC,SAAS,GACTpB,YAAY,GACZqB,KAAK,GACLC,KAAK,GACLC,OAAO,GACPtB,SAAS,GACTuB,gBAAgB,IAElBhC,WAAU,GAEZ,EAAKC,UAAY,IAAIS,IAdL,E,0CA8ClB,WAAS,IAAD,EAC0BpD,KAAKsC,MAA9BD,EADD,EACCA,YAAYK,EADb,EACaA,UACnB,OACE,cAACiC,EAAD,UACA,sBAAKzD,UAAU,uBAAf,UACA,qBAAKA,UAAU,OAAf,0BACE,oBAAIA,UAAU,YAAd,oBACA,eAACoC,EAAA,EAAD,CAAMpC,UAAU,YAAhB,UACE,cAACoC,EAAA,EAAKC,MAAN,CAAYrC,UAAU,eAAtB,wCAGA,sBAAKA,UAAU,mBAAf,uCAC6B,IAC3B,cAAC,IAAD,CAAMsC,GAAG,IAAItC,UAAU,WAAvB,wBAIF,eAACuC,EAAA,EAAD,CAAMtB,KAAK,OAAOuB,SAAU1D,KAAKwC,aAActB,UAAU,YAAzD,UACL,eAACuC,EAAA,EAAKE,MAAN,WACS,uBAAOzC,UAAU,aAAjB,wBACA,uBACE0C,KAAK,OACLzB,KAAK,WACL0B,YAAY,iBACZzB,MAAOC,EAAYiC,SACnBR,SAAU9D,KAAKgC,aACfd,UAAW,8BAEZlB,KAAK2C,UAAU5B,QAAQ,WAAYsB,EAAYiC,SAAU,WAAY,CAAEpD,UAAU,mBAIpF,eAACuC,EAAA,EAAKE,MAAN,WACE,uBAAOzC,UAAU,aAAjB,0BACA,uBACE0C,KAAK,SACLzB,KAAK,cACL0B,YAAY,kBACZzB,MAAOC,EAAYa,YACnBY,SAAU9D,KAAKgC,aACfd,UAAW,8BAEZlB,KAAK2C,UAAU5B,QAAQ,cAAesB,EAAYa,YAAa,WAAY,CAAEhC,UAAU,mBAGxF,eAACuC,EAAA,EAAKE,MAAN,WACA,uBAAOzC,UAAU,aAAjB,kCACA,uBACE0C,KAAK,SACLzB,KAAK,OACL0B,YAAY,eACZzB,MAAOC,EAAYkC,KACnBT,SAAU9D,KAAKgC,aACfd,UAAW,8BAEZlB,KAAK2C,UAAU5B,QAAQ,OAAQsB,EAAYkC,KAAM,WAAY,CAAErD,UAAU,mBAM5E,eAACuC,EAAA,EAAKE,MAAN,WACE,uBAAOzC,UAAU,aAAjB,mBAEN,yBACQiB,KAAK,OACLC,MAAOC,EAAYmC,KACnBV,SAAU9D,KAAKgC,aACfd,UAAW,2BAJnB,UAKQ,wBAAQkB,MAAM,GAAd,wBACEgC,GAASA,EAAMQ,KAAI,SAACC,EAAKC,GAAN,OACjB,iCAAqBD,GAARC,SAGlB9E,KAAK2C,UAAU5B,QAAQ,OAAQsB,EAAYmC,KAAM,WAAY,CAAEtD,UAAU,mBAK5E,eAACuC,EAAA,EAAKE,MAAN,WACE,uBAAOzC,UAAU,aAAjB,qBAEN,yBACQiB,KAAK,SACLC,MAAOC,EAAYoC,OACnBX,SAAU9D,KAAKgC,aACfd,UAAW,4BAJnB,UAKQ,wBAAQkB,MAAM,GAAd,wBACM+B,GAAYA,EAASS,KAAI,SAACC,EAAKC,GAAN,OAC3B,iCAAqBD,GAARC,SAGlB9E,KAAK2C,UAAU5B,QAAQ,OAAQsB,EAAYmC,KAAM,WAAY,CAAEtD,UAAU,mBAI5E,eAACuC,EAAA,EAAKE,MAAN,WACE,uBAAOzC,UAAU,aAAjB,sBACA,uBACE0C,KAAK,WACLzB,KAAK,WACLC,MAAQC,EAAYc,SACpBW,SAAU9D,KAAKgC,aACf+B,KAAK,KACL7C,UAAU,6BAGXlB,KAAK2C,UAAU5B,QAAQ,WAAYsB,EAAYc,SAAU,WAAY,CAAEjC,UAAU,mBAIlF,eAACuC,EAAA,EAAKE,MAAN,WACA,uBAAOzC,UAAU,aAAjB,sBACA,uBACE0C,KAAK,WACLzB,KAAK,kBACLC,MAAQC,EAAYqC,gBACpBZ,SAAU9D,KAAKgC,aACf+B,KAAK,KACL7C,UAAU,6BAGXlB,KAAK2C,UAAU5B,QAAQ,kBAAmBsB,EAAYqC,gBAAiB,WAAY,CAAExD,UAAU,mBAGlG,cAACuC,EAAA,EAAKE,MAAN,UACE,qBAAKzC,UAAU,YAAf,SACA,cAAC,EAAD,CACEV,QAAYkC,EACZhC,SAAY,EACZD,aAAe,aACfE,aAAe,mBACfG,MAAO,CAAEkD,WAAY,IACrBjE,QAASC,KAAKwC,yBAQtB,sBAAKtB,UAAU,UAAf,6CACiC,cAAC,IAAD,CAAMsC,GAAG,IAAItC,UAAU,kBAAvB,6BADjC,SACsG,cAAC,IAAD,CAAMsC,GAAG,IAAItC,UAAU,kBAAvB,8C,GA7LxEf,IAAMC,WAuMtCuE,EAAoBtE,IAAO4D,IAAV,gsC,QC3MFc,E,8JACnB,SAAUC,GACRA,EAAMvC,mB,oBAIR,WACE,OACE,cAACwC,EAAD,UACA,sBAAK/D,UAAU,mBAAf,UACA,eAAC,QAAD,CAAMgE,OAAK,EAAX,UACE,mBAAGpD,GAAG,QAAQZ,UAAU,YAAYiE,KAAK,IAAzC,mBACA,mBAAGrD,GAAG,IAAIZ,UAAU,YAAYiE,KAAK,IAArC,mBACA,mBAAGrD,GAAG,IAAIZ,UAAU,YAAYiE,KAAK,IAArC,qBACA,mBAAGpF,QAAUC,KAAKoF,SAAWlE,UAAU,mBAAmBiE,KAAK,GAA/D,yBAEF,oBAAIjE,UAAU,yB,GAhBgBf,IAAMC,WAyBpC6E,EAAkB5E,IAAO4D,IAAV,+5CCrBAoB,E,kDACnB,WAAYpF,GAAQ,IAAD,8BACjB,cAAMA,IAeR+B,aAAe,SAACC,GAAO,IAAD,EACIA,EAAEC,OAAlBC,EADY,EACZA,KAAMC,EADM,EACNA,MACNC,EAAgB,EAAKC,MAArBD,YACR,EAAKE,SAAS,CACZF,YAAY,2BACPA,GADM,kBAERF,EAAOC,OAtBK,EA2BnBI,aAAe,SAACP,GAAO,IACbI,EAAgB,EAAKC,MAArBD,YACRJ,EAAEQ,iBACF,EAAKF,SAAS,CACZG,WAAW,IAGT,EAAKC,UAAUC,WACjBC,MAAMC,KAAKC,UAAUV,KAErB,EAAKE,SAAS,CACZG,WAAW,IAEb,EAAKC,UAAUK,eACf,EAAKC,gBAvCP,EAAKX,MAAQ,CACXD,YAAa,CACXiC,SAAU,GACVpB,YAAa,GACboC,iBAAkB,GAClBC,gBAAiB,GACjBd,OAAQ,GACRe,cAAe,IAEjB9C,WAAW,GAEb,EAAKC,UAAY,IAAIS,IAbJ,E,0CA6CnB,WAAU,IAAD,EAC4BpD,KAAKsC,MAAhCD,EADD,EACCA,YAAaK,EADd,EACcA,UACrB,OACE,eAAC+C,EAAD,WACI,cAAC,EAAD,IACE,qBAAKvE,UAAU,gBAAf,SACA,qBAAKA,UAAU,aAEf,oBAAIA,UAAU,gBACd,eAACuC,EAAA,EAAD,CACEtB,KAAK,OACLuB,SAAU1D,KAAKwC,aACftB,UAAU,eAHZ,UAKE,eAACuC,EAAA,EAAKE,MAAN,WACE,uBAAOzC,UAAU,aAAjB,uBACA,uBACE0C,KAAK,OACLzB,KAAK,WACLC,MAAOC,EAAYiC,SACnBT,YAAY,iBACZC,SAAU9D,KAAKgC,aACfd,UAAU,8BAEXlB,KAAK2C,UAAU5B,QACd,WACAsB,EAAYiC,SACZ,WACA,CAAEpD,UAAW,mBAIjB,eAACuC,EAAA,EAAKE,MAAN,WACE,uBAAOzC,UAAU,aAAjB,0BACA,uBACE0C,KAAK,SACLzB,KAAK,cACLC,MAAOC,EAAYa,YACnBW,YAAY,mBACZC,SAAU9D,KAAKgC,aACf+B,KAAK,KACL7C,UAAU,6BAEXlB,KAAK2C,UAAU5B,QACd,eACAsB,EAAYa,YACZ,WACA,CAAEhC,UAAW,mBAIjB,eAACuC,EAAA,EAAKE,MAAN,WACE,uBAAOzC,UAAU,aAAjB,gCACA,uBACE0C,KAAK,SACLzB,KAAK,mBACLC,MAAOC,EAAYiD,iBACnBzB,YAAY,eACZC,SAAU9D,KAAKgC,aACf+B,KAAK,KACL7C,UAAU,6BAEXlB,KAAK2C,UAAU5B,QACd,qBACAsB,EAAYiD,iBACZ,WACA,CAAEpE,UAAW,mBAGjB,eAACuC,EAAA,EAAKE,MAAN,WACE,uBAAOzC,UAAU,aAAjB,8BACA,eAACuC,EAAA,EAAKiC,QAAN,CACEC,GAAG,SACH7B,SAAU9D,KAAKgC,aACfd,UAAU,2BACViB,KAAK,kBAJP,UAME,gDACE+B,GAAgBA,EAAaU,KAAI,SAACC,EAAKC,GAAN,OACjC,iCAAqBD,GAARC,SAGhB9E,KAAK2C,UAAU5B,QACd,mBACAsB,EAAYkD,gBACZ,WACA,CAAErE,UAAW,mBAGjB,eAACuC,EAAA,EAAKE,MAAN,WACE,uBAAOzC,UAAU,aAAjB,oBACA,eAACuC,EAAA,EAAKiC,QAAN,CACEC,GAAG,SACH7B,SAAU9D,KAAKgC,aACfd,UAAU,2BACViB,KAAK,SAJP,UAME,gDACCgC,GAAYA,EAASS,KAAI,SAACC,EAAKC,GAAN,OACxB,iCAAqBD,GAARC,SAGhB9E,KAAK2C,UAAU5B,QACd,SACAsB,EAAYoC,OACZ,WACA,CAAEvD,UAAW,mBAIjB,eAACuC,EAAA,EAAKE,MAAN,WACE,uBAAOzC,UAAU,aAAjB,4BACA,qBAAKA,UAAU,gBAAf,0CACA,uBACE0C,KAAK,SACLzB,KAAK,mBACLC,MAAOC,EAAYmD,cACnB1B,SAAU9D,KAAKgC,aACf+B,KAAK,KACL7C,UAAU,6BAEXlB,KAAK2C,UAAU5B,QACd,qBACAsB,EAAYmD,cACZ,WACA,CAAEtE,UAAW,mBAIjB,cAACuC,EAAA,EAAKE,MAAN,UACE,qBAAKzC,UAAU,YAAf,SACE,cAAC,EAAD,CACEV,QAASkC,EACThC,SAAS,EACTD,aAAa,mBACbE,aAAa,iBACbG,MAAO,CAAEkD,WAAY,IACrBjE,QAASC,KAAKwC,6B,GAvLSrC,IAAMC,WAiM3CqF,EAAmBpF,IAAO4D,IAAV,soCClMD2B,E,kDACnB,WAAY3F,GAAQ,IAAD,8BACjB,cAAMA,IAYR+B,aAAe,SAACC,GAAO,IAAD,EACIA,EAAEC,OAAlBC,EADY,EACZA,KAAMC,EADM,EACNA,MACNC,EAAgB,EAAKC,MAArBD,YACR,EAAKE,SAAS,CACZF,YAAY,2BACPA,GADM,kBAERF,EAAOC,OAnBK,EAwBnBI,aAAe,SAACP,GAAO,IACbI,EAAgB,EAAKC,MAArBD,YACRJ,EAAEQ,iBACF,EAAKF,SAAS,CACZG,WAAW,IAGT,EAAKC,UAAUC,WACjBC,MAAMC,KAAKC,UAAUV,KAErB,EAAKE,SAAS,CACZG,WAAW,IAEb,EAAKC,UAAUK,eACf,EAAKC,gBApCP,EAAKX,MAAQ,CACXD,YAAa,CACXiC,SAAU,GACVpB,YAAa,GACboC,iBAAkB,IAEpB5C,WAAW,GAEb,EAAKC,UAAY,IAAIS,IAVJ,E,0CA0CnB,WAAU,IAAD,EAC4BpD,KAAKsC,MAAhCD,EADD,EACCA,YAAaK,EADd,EACcA,UACrB,OACE,eAAC,EAAD,WACI,cAAC,EAAD,IACE,qBAAKxB,UAAU,gBAAf,SACA,qBAAKA,UAAU,aAEf,oBAAIA,UAAU,gBACd,eAACuC,EAAA,EAAD,CACEtB,KAAK,OACLuB,SAAU1D,KAAKwC,aACftB,UAAU,eAHZ,UAKE,eAACuC,EAAA,EAAKE,MAAN,WACE,uBAAOzC,UAAU,aAAjB,uBACA,uBACE0C,KAAK,OACLzB,KAAK,WACLC,MAAOC,EAAYiC,SACnBT,YAAY,iBACZC,SAAU9D,KAAKgC,aACfd,UAAU,8BAEXlB,KAAK2C,UAAU5B,QACd,WACAsB,EAAYiC,SACZ,WACA,CAAEpD,UAAW,mBAIjB,eAACuC,EAAA,EAAKE,MAAN,WACE,uBAAOzC,UAAU,aAAjB,0BACA,uBACE0C,KAAK,SACLzB,KAAK,cACLC,MAAOC,EAAYa,YACnBW,YAAY,mBACZC,SAAU9D,KAAKgC,aACf+B,KAAK,KACL7C,UAAU,6BAEXlB,KAAK2C,UAAU5B,QACd,eACAsB,EAAYa,YACZ,WACA,CAAEhC,UAAW,mBAIjB,eAACuC,EAAA,EAAKE,MAAN,WACE,uBAAOzC,UAAU,aAAjB,gCACA,uBACE0C,KAAK,SACLzB,KAAK,mBACLC,MAAOC,EAAYiD,iBACnBzB,YAAY,eACZC,SAAU9D,KAAKgC,aACf+B,KAAK,KACL7C,UAAU,6BAEXlB,KAAK2C,UAAU5B,QACd,qBACAsB,EAAYiD,iBACZ,WACA,CAAEpE,UAAW,mBAGjB,cAACuC,EAAA,EAAKE,MAAN,UACE,qBAAKzC,UAAU,YAAf,SACE,cAAC,EAAD,CACEV,QAASkC,EACThC,SAAS,EACTD,aAAa,mBACbE,aAAa,iBACbG,MAAO,CAAEkD,WAAY,IACrBjE,QAASC,KAAKwC,6B,GAxHQrC,IAAMC,WAkI1CqF,EAAmBpF,IAAO4D,IAAV,uoC,eCvIT4B,EAAUC,c,MCqBRC,MAff,WACE,OACE,qBAAK7E,UAAU,MAAf,SACE,cAAC,IAAD,CAAQ2E,QAASA,EAAjB,SACE,eAAC,IAAD,WACA,cAAC,IAAD,CAAOG,OAAK,EAACC,KAAK,IAAIC,UAAWnE,IACjC,cAAC,IAAD,CAAOiE,OAAK,EAACC,KAAK,YAAYC,UAAW7B,IACzC,cAAC,IAAD,CAAO2B,OAAK,EAACC,KAAK,kBAAkBC,UAAWb,IAC/C,cAAC,IAAD,CAAOW,OAAK,EAACC,KAAK,iBAAiBC,UAAWN,YCJvCO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.eb2855b8.chunk.js","sourcesContent":["\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nexport default class Button extends React.Component {\n  render() {\n    return (\n      <ButtonContainer onClick={this.props.onClick} {...this.props}>\n        {this.props.label}\n      </ButtonContainer>\n    );\n  }\n}\n\nconst ButtonContainer = styled.button`\n  background: #e57373;\n  border: none;\n  color: #fff;\n  padding: 8px;\n  border-radius: 5px;\n  font-size: 16px;\n  cursor: pointer;\n  box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14),\n    0 3px 1px -2px rgba(0, 0, 0, 0.12), 0 1px 5px 0 rgba(0, 0, 0, 0.2);\n  &:hover {\n    background: #ff7f50;\n  }\n`;","import React from \"react\";\nimport Button from \"./Button\";\n\nexport default class AsyncActionButton extends React.Component {\n  static defaultProps = {\n    working: false,\n    enabled: false,\n    onClick: null,\n    text_disabled: \"\",\n    text_working: \"\",\n    text_enabled: \"\",\n    raised: true,\n    fullWidth: false,\n    id: null,\n  };\n\n  getMessage() {\n    if (this.props.working) return this.props.text_working;\n    else if (this.props.enabled) return this.props.text_enabled;\n    else return this.props.text_disabled;\n  }\n\n  render() {\n    let { working, enabled, style } = this.props;\n    let icon;\n    const message = this.getMessage();\n    let workingStyle = {};\n    if (working) {\n      icon = (\n        <i\n          className=\"fa fa-refresh fa-spin\"\n          style={{ color: \"#fff\", marginRight: 10 }}\n        />\n      );\n      workingStyle = { background: \"#808080\", boxShadow: \"none\" };\n    }\n    style = Object.assign({}, style || {}, workingStyle);\n    const Label = () => (\n      <div>\n        {icon}\n        {message}\n      </div>\n    );\n    return (\n      <Button\n        label={<Label />}\n        disabled={working || !enabled}\n        onClick={this.props.onClick}\n        style={style}\n      />\n    );\n  }\n}","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Form, Card } from \"react-bootstrap\";\nimport SimpleReactValidator from \"simple-react-validator\";\nimport styled from \"styled-components\";\nimport AsyncActionButton from \"./AsyncActionButton\";\n\nexport default class LoginPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      form_inputs: {\n        phoneNumber: \"\",\n        password: \"\",\n      },\n      submitted: false,\n    };\n    this.validator = new SimpleReactValidator();\n  }\n\n  handleChange = (e) => {\n    const { name, value } = e.target;\n    const { form_inputs } = this.state;\n    this.setState({\n      form_inputs: {\n        ...form_inputs,\n        [name]: value,\n      },\n    });\n  };\n\n  handleSubmit = (e) => {\n    const { form_inputs } = this.state;\n    e.preventDefault();\n    this.setState({\n      submitted: true,\n    });\n\n    if (this.validator.allValid()) {\n      alert(JSON.stringify(form_inputs));\n    } else {\n      this.setState({\n        submitted: false,\n      });\n      this.validator.showMessages();\n      this.forceUpdate();\n    }\n  };\n\n  render() {\n    const { form_inputs, submitted } = this.state;\n    return (\n      <LoginContainer>\n        <div className=\"col-lg-8 offset-lg-2\">\n          <div className=\"logo\">company logo</div>\n          <h2 className=\"app-title\">furaha</h2>\n          <Card className=\"auth-card\">\n            <Card.Title className=\"app-subtitle\">\n              Sign In to your Furaha Account\n            </Card.Title>\n            <div className=\"sign-up-redirect\">\n              Don't have an account?{\" \"}\n              <Link to=\"/register\" className=\"btn-link\">\n                Sign Up\n              </Link>\n            </div>\n            <Form\n              name=\"form\"\n              onSubmit={this.handleSubmit}\n              className=\"auth-form\"\n            >\n              <Form.Group>\n                <label className=\"form-label\">Phone Number</label>\n                <input\n                  type=\"number\"\n                  name=\"phoneNumber\"\n                  placeholder=\"e.g 25472211000\"\n                  value={form_inputs.phoneNumber}\n                  onChange={this.handleChange}\n                  className=\" form-inputs form-control\"\n                />\n                {this.validator.message(\n                  \"phoneNumber\",\n                  form_inputs.phoneNumber,\n                  \"required\",\n                  { className: \"text-danger\" }\n                )}\n              </Form.Group>\n\n              <Form.Group>\n                <label className=\"form-label\">Password</label>\n                <input\n                  type=\"password\"\n                  name=\"password\"\n                  value={form_inputs.password}\n                  onChange={this.handleChange}\n                  size=\"10\"\n                  className=\"form-inputs form-control\"\n                />\n                {this.validator.message(\n                  \"password\",\n                  form_inputs.password,\n                  \"required\",\n                  { className: \"text-danger\" }\n                )}\n              </Form.Group>\n              <Form.Group>\n                <div className=\"async-btn\">\n                  <AsyncActionButton\n                    working={submitted}\n                    enabled={true}\n                    text_working=\"Signing in\"\n                    text_enabled=\"Sign in\"\n                    style={{ marginLeft: 40 }}\n                    onClick={this.handleSubmit}\n                  />\n                </div>\n              </Form.Group>\n              <Link to=\"#\" className=\" forgot-password  btn-link\">\n                Forgot Password?\n              </Link>\n            </Form>\n          </Card>\n        </div>\n      </LoginContainer>\n    );\n  }\n}\n\nconst LoginContainer = styled.div`\n  .auth-form {\n    margin: 20px;\n  }\n\n  .logo {\n    text-align: center;\n    margin-bottom: 25px;\n  }\n\n  .app-title {\n    margin-bottom: 40px;\n    text-align: center;\n    font-weight: bold;\n  }\n\n  .app-subtitle {\n    margin-left: 20px;\n    margin-right: 20px;\n    margin-top: 60px;\n    text-align: center;\n    font-size: x-large;\n    font-weight: bold;\n  }\n\n  .sign-up-redirect {\n    text-align: center;\n    font-size: 14px;\n    margin-bottom: 20px;\n  }\n\n  @media only screen and (min-width: 900px) {\n    .auth-card {\n      border-radius: 15px;\n      padding-bottom: 50px;\n      width: 50rem;\n      margin-left: 240px;\n    }\n    .async-btn {\n      margin-left: 60px;\n    }\n  }\n\n  .forgot-password {\n    text-align: center;\n    align-items: center;\n    justify-content: center;\n    display: flex;\n    font-size: small;\n    margin-top: 40px;\n  }\n\n  .form-inputs {\n    width: 600px;\n    margin-left: 100px;\n  }\n\n  .form-label {\n    font-weight: bold;\n    font-size: small;\n    margin-left: 100px;\n  }\n\n  .text-danger {\n    margin-left: 40px;\n    font-size: small;\n  }\n\n  @media only screen and (max-width: 700px) {\n    .form-label {\n      font-weight: bold;\n      font-size: small;\n      margin-left: 40px;\n    }\n\n    .form-inputs {\n      width: 250px;\n      margin-left: 40px;\n    }\n  }\n`;\n","export const COOPERATIVES = [\"KCP\", \"FURAHA\", \"TCB\"];\nexport const COUNTIES = [\"NAIROBI\", \"MURANGA\", \"MALINDI\"];\nexport const ROLES = [\"ADMIN\", \"FARMER\", \"MARKETING\"];\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Form, Card } from \"react-bootstrap\";\nimport SimpleReactValidator from 'simple-react-validator';\nimport styled from \"styled-components\";\nimport AsyncActionButton from './AsyncActionButton';\nimport {COUNTIES, ROLES} from \"../_constants/Constants\";\n\nexport default class Register extends React.Component {\n  constructor(props){\n    super(props);\n    this.state={\n      form_inputs:{\n        fullName:\"\",\n        phoneNumber:\"\",\n        idNo:\"\",\n        role:\"\",\n        county:\"\",\n        password:\"\",\n        confirmPassword:\"\"\n      },\n      submitted:false\n    }\n    this.validator = new SimpleReactValidator();\n  }\n\n  handleChange=(e)=> {\n    const { name, value } = e.target;\n    const {form_inputs} = this.state\n    this.setState({\n      form_inputs:{\n        ...form_inputs,\n        [name]:value\n      }\n    });\n  }\n\n  handleSubmit =(e)=> {\n    const {form_inputs} = this.state;\n    e.preventDefault();\n    this.setState({\n      submitted:true\n    });\n\n    if(this.validator.allValid()){\n      alert(JSON.stringify(form_inputs));\n    } else{\n      this.setState({\n        submitted:false\n      })\n      this.validator.showMessages();\n      this.forceUpdate();\n    }\n  }\n\n  render(){\n    const {form_inputs,submitted} = this.state\n    return (\n      <RegisterContainer>\n      <div className=\"col-lg-8 offset-lg-2\">\n      <div className=\"logo\">company logo</div>\n        <h2 className=\"app-title\">furaha</h2>\n        <Card className=\"auth-card\">\n          <Card.Title className=\"app-subtitle\">\n           Create your Furaha Account\n          </Card.Title>\n          <div className=\"sign-up-redirect\">\n            Already have an account ? {\" \"}\n            <Link to=\"/\" className=\"btn-link\">\n              Sign In\n            </Link>\n          </div>\n          <Form name=\"form\" onSubmit={this.handleSubmit} className=\"auth-form\">\n  \t\t\t<Form.Group>\n              <label className=\"form-label\" >Full Names</label>\n              <input\n                type=\"text\"\n                name=\"fullName\"\n                placeholder=\"e.g Mark Kamau\"\n                value={form_inputs.fullName}\n                onChange={this.handleChange}\n                className= \" form-inputs form-control\"\n              />\n              {this.validator.message('fullName', form_inputs.fullName, 'required', { className:'text-danger' })}\n            </Form.Group>\n\n\n            <Form.Group>\n              <label className=\"form-label\" >Phone Number</label>\n              <input\n                type=\"number\"\n                name=\"phoneNumber\"\n                placeholder=\"e.g 25472211000\"\n                value={form_inputs.phoneNumber}\n                onChange={this.handleChange}\n                className= \" form-inputs form-control\"\n              />\n              {this.validator.message('phoneNumber', form_inputs.phoneNumber, 'required', { className:'text-danger' })}\n            </Form.Group>\n\n              <Form.Group>\n              <label className=\"form-label\"> National ID Number </label>\n              <input\n                type=\"number\"\n                name=\"idNo\"\n                placeholder=\"e.g 25950043\"\n                value={form_inputs.idNo}\n                onChange={this.handleChange}\n                className= \" form-inputs form-control\"\n              />\n              {this.validator.message('idNo', form_inputs.idNo, 'required', { className:'text-danger' })}\n            </Form.Group>\n\n\n\n\n            <Form.Group>\n              <label className=\"form-label\" >Role </label>\n\n\t\t      <select\n                name=\"role\"\n                value={form_inputs.role}\n                onChange={this.handleChange}\n                className= \"form-inputs form-control\">\n            \t\t\t\t<option value=\"\">Select One</option>\n            \t\t\t\t{ ROLES && ROLES.map((val, index) => (\n                    <option key={index}>{val}</option>\n                  ))}\n              </select>\n              {this.validator.message('role', form_inputs.role, 'required', { className:'text-danger' })}\n            </Form.Group>\n\n\n\n            <Form.Group>\n              <label className=\"form-label\" >County </label>\n\n\t\t      <select\n                name=\"county\"\n                value={form_inputs.county}\n                onChange={this.handleChange}\n                className= \" form-inputs form-control\">\n            \t\t\t\t<option value=\"\">Select One</option>\n                    { COUNTIES && COUNTIES.map((val, index) => (\n                    <option key={index}>{val}</option>\n                  ))}\n              </select>\n              {this.validator.message('role', form_inputs.role, 'required', { className:'text-danger' })}\n            </Form.Group>\n\n\n            <Form.Group>\n              <label className=\"form-label\" >Password</label>\n              <input\n                type=\"password\"\n                name=\"password\"\n                value={ form_inputs.password}\n                onChange={this.handleChange}\n                size=\"10\"\n                className=\"form-inputs form-control\"\n\n              />\n              {this.validator.message('password', form_inputs.password, 'required', { className:'text-danger' })}\n\n            </Form.Group>\n\n              <Form.Group>\n              <label className=\"form-label\" >Password</label>\n              <input\n                type=\"password\"\n                name=\"confirmPassword\"\n                value={ form_inputs.confirmPassword}\n                onChange={this.handleChange}\n                size=\"10\"\n                className=\"form-inputs form-control\"\n\n              />\n              {this.validator.message('confirmPassword', form_inputs.confirmPassword, 'required', { className:'text-danger' })}\n\n            </Form.Group>\n            <Form.Group>\n              <div className=\"async-btn\">\n              <AsyncActionButton\n                working = { submitted }\n                enabled = { true }\n                text_working = \"Signing up\"\n                text_enabled = \"Sign up for free\"\n                style={{ marginLeft: 40}}\n                onClick={this.handleSubmit}\n              />\n              </div>\n            </Form.Group>\n\n\n          </Form>\n        </Card>\n        <div className=\"privacy\">\n         By signing up, you agree to our <Link to=\"#\" className=\"links  btn-link\"> Privacy Policy</Link> and  <Link to=\"#\" className=\" links btn-link\">\n              Terms and Conditions\n            </Link>\n            </div>\n      </div>\n      </RegisterContainer>\n    );\n  }\n}\n\nconst RegisterContainer = styled.div`\n.auth-form{\n  margin: 20px;\n}\n\n\n.logo{\n  text-align: center;\n  margin-bottom: 25px;\n}\n\n.app-title{\n  margin-bottom: 40px;\n  text-align: center;\n  font-weight: bold;\n\n}\n\n.app-subtitle{\n  margin-left: 20px;\n  margin-right: 20px;\n  margin-top:60px;\n  text-align: center;\n  font-size: x-large;\n  font-weight: bold;\n}\n\n.sign-up-redirect{\n  text-align: center;\n  font-size: 14px;\n  margin-bottom: 20px;\n}\n\n@media only screen and (min-width: 900px) {\n.auth-card{\n  border-radius: 15px;\n  padding-bottom: 50px;\n  width: 50rem;\n\n}\n.async-btn{\n  margin-left:60px;\n}\n\n}\n\n.links{\n  text-align: center;\n  align-items: center;\n  justify-content: center;\n  margin-top:40px;\n}\n\n.privacy{\n  padding-top:10px;\n text-align: center;\n\n}\n\n.form-inputs{\n  width:600px;\n  margin-left:100px;\n}\n\n.form-label{\n  font-weight: bold;\n  font-size:small;\n  margin-left:100px\n}\n\n\n.text-danger{\n  margin-left:40px;\n  font-size:small;\n}\n\n@media only screen and (max-width: 700px) {\n  .form-label{\n    font-weight: bold;\n    font-size:small;\n    margin-left:40px\n  }\n\n  .form-inputs{\n    width:250px;\n    margin-left:40px;\n  }\n\n\n}\n\n\n`\n\n\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { slide as Menu } from 'react-burger-menu'\n\nexport default class Navbar extends React.Component {\n  showMenu (event) {\n    event.preventDefault();\n\n  }\n\n  render() {\n    return (\n      <NavbarContainer>\n      <div className=\"burger-container\">\n      <Menu right>\n        <a id=\"Login\" className=\"menu-item\" href=\"/\">Login</a>\n        <a id=\"#\" className=\"menu-item\" href=\"#\">About</a>\n        <a id=\"#\" className=\"menu-item\" href=\"#\">Contact</a>\n        <a onClick={ this.showMenu } className=\"menu-item--small\" href=\"\">Settings</a>\n      </Menu>\n      <hr className=\"app-divider\" />\n      </div>\n\n\n      </NavbarContainer>\n    );\n  }\n}\n\nconst NavbarContainer = styled.div`\n.app-divider{\n  width: 0%;\n  margin:0 auto;\n  padding-bottom:10px;\n}\n\n.burger-container{\n  margin-bottom:30px;\n  position: static;\n  background-color: rgb(250,240, 230);\n}\n.bm-burger-button {\n  position: relative;\n  float:right;\n  margin-right:50px;\n  margin-bottom:50px;\n  width: 26px;\n  height: 20px;\n  left: 42px;\n  top: 12px;\n}\n\n/* Color/shape of burger icon bars */\n.bm-burger-bars {\n  background: rgb(229,115,115);\n}\n\n/* Color/shape of burger icon bars on hover*/\n.bm-burger-bars-hover {\n  background: #a90000;\n}\n\n/* Position and sizing of clickable cross button */\n.bm-cross-button {\n  height: 24px;\n  width: 24px;\n}\n\n/* Color/shape of close button cross */\n.bm-cross {\n  background: #bdc3c7;\n}\n\n/*\nSidebar wrapper styles\nNote: Beware of modifying this element as it can break the animations - you should not need to touch it in most cases\n*/\n.bm-menu-wrap {\n  position: fixed;\n  height: 100%;\n}\n\n/* General sidebar styles */\n.bm-menu {\n  background: #373a47;\n  padding: 2.5em 1.5em 0;\n  font-size: 1.15em;\n}\n\n/* Morph shape necessary with bubble or elastic */\n.bm-morph-shape {\n  fill: #373a47;\n}\n\n/* Wrapper for item list */\n.bm-item-list {\n  color: #b8b7ad;\n  padding: 0.8em;\n}\n\n/* Individual item */\n.bm-item {\n  display: inline-block;\n}\n\n/* Styling of overlay */\n.bm-overlay {\n  background-color: rgb(250,240, 230);\n}\n\n`;\n","import React from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport SimpleReactValidator from \"simple-react-validator\";\nimport styled from \"styled-components\";\nimport AsyncActionButton from \"./AsyncActionButton\";\nimport {COOPERATIVES, COUNTIES} from \"../_constants/Constants\";\nimport Navbar from './Navbar';\n\nexport default class FarmerProfile extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      form_inputs: {\n        fullName: \"\",\n        phoneNumber: \"\",\n        nationalIdNumber: \"\",\n        cooperativeName: \"\",\n        county: \"\",\n        exactLocation: \"\",\n      },\n      submitted: false,\n    };\n    this.validator = new SimpleReactValidator();\n  }\n\n  handleChange = (e) => {\n    const { name, value } = e.target;\n    const { form_inputs } = this.state;\n    this.setState({\n      form_inputs: {\n        ...form_inputs,\n        [name]: value,\n      },\n    });\n  };\n\n  handleSubmit = (e) => {\n    const { form_inputs } = this.state;\n    e.preventDefault();\n    this.setState({\n      submitted: true,\n    });\n\n    if (this.validator.allValid()) {\n      alert(JSON.stringify(form_inputs));\n    } else {\n      this.setState({\n        submitted: false,\n      });\n      this.validator.showMessages();\n      this.forceUpdate();\n    }\n  };\n\n  render() {\n    const { form_inputs, submitted } = this.state;\n    return (\n      <ProfileContainer>\n          <Navbar/>\n            <div className=\"avatar-parent\">\n            <div className=\"avatar\" />\n            </div>\n            <hr className=\"app-divider\" />\n            <Form\n              name=\"form\"\n              onSubmit={this.handleSubmit}\n              className=\"profile-form\"\n            >\n              <Form.Group>\n                <label className=\"form-label\">Full Name</label>\n                <input\n                  type=\"text\"\n                  name=\"fullName\"\n                  value={form_inputs.fullName}\n                  placeholder=\"eg. Mark Kamau\"\n                  onChange={this.handleChange}\n                  className=\" form-inputs form-control\"\n                />\n                {this.validator.message(\n                  \"fullName\",\n                  form_inputs.fullName,\n                  \"required\",\n                  { className: \"text-danger\" }\n                )}\n              </Form.Group>\n\n              <Form.Group>\n                <label className=\"form-label\">Phone Number</label>\n                <input\n                  type=\"number\"\n                  name=\"phoneNumber\"\n                  value={form_inputs.phoneNumber}\n                  placeholder=\"eg. 254722111000\"\n                  onChange={this.handleChange}\n                  size=\"10\"\n                  className=\"form-inputs form-control\"\n                />\n                {this.validator.message(\n                  \"Phone Number\",\n                  form_inputs.phoneNumber,\n                  \"required\",\n                  { className: \"text-danger\" }\n                )}\n              </Form.Group>\n\n              <Form.Group>\n                <label className=\"form-label\">National ID Number</label>\n                <input\n                  type=\"number\"\n                  name=\"nationalIdNumber\"\n                  value={form_inputs.nationalIdNumber}\n                  placeholder=\"eg. 25940031\"\n                  onChange={this.handleChange}\n                  size=\"10\"\n                  className=\"form-inputs form-control\"\n                />\n                {this.validator.message(\n                  \"National ID Number\",\n                  form_inputs.nationalIdNumber,\n                  \"required\",\n                  { className: \"text-danger\" }\n                )}\n              </Form.Group>\n              <Form.Group>\n                <label className=\"form-label\">Cooperative Name</label>\n                <Form.Control\n                  as=\"select\"\n                  onChange={this.handleChange}\n                  className=\"form-inputs form-control\"\n                  name=\"cooperativeName\"\n                >\n                  <option>Select One</option>\n                  { COOPERATIVES && COOPERATIVES.map((val, index) => (\n                    <option key={index}>{val}</option>\n                  ))}\n                </Form.Control>\n                {this.validator.message(\n                  \"Cooperative Name\",\n                  form_inputs.cooperativeName,\n                  \"required\",\n                  { className: \"text-danger\" }\n                )}\n              </Form.Group>\n              <Form.Group>\n                <label className=\"form-label\">County</label>\n                <Form.Control\n                  as=\"select\"\n                  onChange={this.handleChange}\n                  className=\"form-inputs form-control\"\n                  name=\"county\"\n                >\n                  <option>Select One</option>\n                  {COUNTIES && COUNTIES.map((val, index) => (\n                    <option key={index}>{val}</option>\n                  ))}\n                </Form.Control>\n                {this.validator.message(\n                  \"County\",\n                  form_inputs.county,\n                  \"required\",\n                  { className: \"text-danger\" }\n                )}\n              </Form.Group>\n\n              <Form.Group>\n                <label className=\"form-label\">Exact Location</label>\n                <div className=\"form-label-sm\">Current Location:Nyali beach</div>\n                <input\n                  type=\"number\"\n                  name=\"nationalIdNumber\"\n                  value={form_inputs.exactLocation}\n                  onChange={this.handleChange}\n                  size=\"10\"\n                  className=\"form-inputs form-control\"\n                />\n                {this.validator.message(\n                  \"National ID Number\",\n                  form_inputs.exactLocation,\n                  \"required\",\n                  { className: \"text-danger\" }\n                )}\n              </Form.Group>\n\n              <Form.Group>\n                <div className=\"async-btn\">\n                  <AsyncActionButton\n                    working={submitted}\n                    enabled={true}\n                    text_working=\"Updating Profile\"\n                    text_enabled=\"Update Profile\"\n                    style={{ marginLeft: 40 }}\n                    onClick={this.handleSubmit}\n                  />\n                </div>\n              </Form.Group>\n            </Form>\n        </ProfileContainer>\n    );\n  }\n}\n\nconst ProfileContainer = styled.div`\n  .avatar-parent{\n    background-color:#FFFFFF;\n    padding-bottom: 30px;\n    padding-top: 10px;\n  }\n  .profile-form {\n    padding-bottom:30px;\n    background-color:#FFFFFF;\n  }\n\n  .logo{\n    text-align: center;\n    margin-bottom: 25px;\n  }\n\n  .app-divider{\n    width: 0%;\n    margin:0 auto;\n  }\n\n  .form-inputs {\n    width: 600px;\n    margin-left: 100px;\n  }\n\n  .form-label {\n    font-weight: bold;\n    font-size: small;\n    margin-left: 100px;\n  }\n\n  .form-label-sm {\n    font-size: 12px;\n    margin-left: 40px;\n    margin-bottom:10px;\n  }\n\n  .text-danger {\n    margin-left: 40px;\n    font-size: small;\n  }\n\n  .form-label {\n    font-weight: bold;\n    font-size: small;\n    margin-left: 40px;\n  }\n\n  .form-inputs {\n    width: 300px;\n    margin-left: 40px;\n  }\n\n  .avatar {\n    background-image: url('http://i.stack.imgur.com/Dj7eP.jpg');\n    width: 90px;\n    height: 90px;\n    background-size: cover;\n    background-position: top center;\n    border-radius: 50%;\n    margin-left: 40px;\n    margin-bottom: 10px;\n    margin-top: 20px;\n    background-color:#FFFFFF;\n}\n`;\n","import React from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport SimpleReactValidator from \"simple-react-validator\";\nimport styled from \"styled-components\";\nimport AsyncActionButton from \"./AsyncActionButton\";\nimport Navbar from './Navbar';\n\nexport default class BuyerProfile extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      form_inputs: {\n        fullName: \"\",\n        phoneNumber: \"\",\n        nationalIdNumber: \"\"\n      },\n      submitted: false,\n    };\n    this.validator = new SimpleReactValidator();\n  }\n\n  handleChange = (e) => {\n    const { name, value } = e.target;\n    const { form_inputs } = this.state;\n    this.setState({\n      form_inputs: {\n        ...form_inputs,\n        [name]: value,\n      },\n    });\n  };\n\n  handleSubmit = (e) => {\n    const { form_inputs } = this.state;\n    e.preventDefault();\n    this.setState({\n      submitted: true,\n    });\n\n    if (this.validator.allValid()) {\n      alert(JSON.stringify(form_inputs));\n    } else {\n      this.setState({\n        submitted: false,\n      });\n      this.validator.showMessages();\n      this.forceUpdate();\n    }\n  };\n\n  render() {\n    const { form_inputs, submitted } = this.state;\n    return (\n      <ProfileContainer>\n          <Navbar/>\n            <div className=\"avatar-parent\">\n            <div className=\"avatar\" />\n            </div>\n            <hr className=\"app-divider\" />\n            <Form\n              name=\"form\"\n              onSubmit={this.handleSubmit}\n              className=\"profile-form\"\n            >\n              <Form.Group>\n                <label className=\"form-label\">Full Name</label>\n                <input\n                  type=\"text\"\n                  name=\"fullName\"\n                  value={form_inputs.fullName}\n                  placeholder=\"eg. Mark Kamau\"\n                  onChange={this.handleChange}\n                  className=\" form-inputs form-control\"\n                />\n                {this.validator.message(\n                  \"fullName\",\n                  form_inputs.fullName,\n                  \"required\",\n                  { className: \"text-danger\" }\n                )}\n              </Form.Group>\n\n              <Form.Group>\n                <label className=\"form-label\">Phone Number</label>\n                <input\n                  type=\"number\"\n                  name=\"phoneNumber\"\n                  value={form_inputs.phoneNumber}\n                  placeholder=\"eg. 254722111000\"\n                  onChange={this.handleChange}\n                  size=\"10\"\n                  className=\"form-inputs form-control\"\n                />\n                {this.validator.message(\n                  \"Phone Number\",\n                  form_inputs.phoneNumber,\n                  \"required\",\n                  { className: \"text-danger\" }\n                )}\n              </Form.Group>\n\n              <Form.Group>\n                <label className=\"form-label\">National ID Number</label>\n                <input\n                  type=\"number\"\n                  name=\"nationalIdNumber\"\n                  value={form_inputs.nationalIdNumber}\n                  placeholder=\"eg. 25940031\"\n                  onChange={this.handleChange}\n                  size=\"10\"\n                  className=\"form-inputs form-control\"\n                />\n                {this.validator.message(\n                  \"National ID Number\",\n                  form_inputs.nationalIdNumber,\n                  \"required\",\n                  { className: \"text-danger\" }\n                )}\n              </Form.Group>\n              <Form.Group>\n                <div className=\"async-btn\">\n                  <AsyncActionButton\n                    working={submitted}\n                    enabled={true}\n                    text_working=\"Updating Profile\"\n                    text_enabled=\"Update Profile\"\n                    style={{ marginLeft: 40 }}\n                    onClick={this.handleSubmit}\n                  />\n                </div>\n              </Form.Group>\n            </Form>\n        </ProfileContainer>\n    );\n  }\n}\n\nconst ProfileContainer = styled.div`\n  .avatar-parent{\n    background-color:#FFFFFF;\n    padding-bottom: 30px;\n    padding-top: 10px;\n  }\n  .profile-form {\n    padding-bottom:320px;\n    background-color:#FFFFFF;\n  }\n\n  .logo{\n    text-align: center;\n    margin-bottom: 25px;\n  }\n\n  .app-divider{\n    width: 0%;\n    margin:0 auto;\n  }\n\n  .form-inputs {\n    width: 600px;\n    margin-left: 100px;\n  }\n\n  .form-label {\n    font-weight: bold;\n    font-size: small;\n    margin-left: 100px;\n  }\n\n  .form-label-sm {\n    font-size: 12px;\n    margin-left: 40px;\n    margin-bottom:10px;\n  }\n\n  .text-danger {\n    margin-left: 40px;\n    font-size: small;\n  }\n\n  .form-label {\n    font-weight: bold;\n    font-size: small;\n    margin-left: 40px;\n  }\n\n  .form-inputs {\n    width: 300px;\n    margin-left: 40px;\n  }\n\n  .avatar {\n    background-image: url('http://i.stack.imgur.com/Dj7eP.jpg');\n    width: 90px;\n    height: 90px;\n    background-size: cover;\n    background-position: top center;\n    border-radius: 50%;\n    margin-left: 40px;\n    margin-bottom: 10px;\n    margin-top: 20px;\n    background-color:#FFFFFF;\n}\n`;\n","import { createBrowserHistory } from 'history';\n\nexport const history = createBrowserHistory();","import LoginPage from './components/LoginPage';\nimport Register from './components/Register';\nimport FarmerProfile from './components/FarmerProfile';\nimport BuyerProfile from './components/BuyerProfile'\nimport { Router, Route, Switch } from 'react-router-dom';\nimport { history } from './_helpers/history'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router history={history}>\n        <Switch>\n        <Route exact path=\"/\" component={LoginPage} />\n        <Route exact path=\"/register\" component={Register} />\n        <Route exact path=\"/farmer-profile\" component={FarmerProfile} />\n        <Route exact path=\"/buyer-profile\" component={BuyerProfile} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}